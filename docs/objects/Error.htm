<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Error Object | AutoHotkey v2</title>
<meta name="description" content="Error objects thrown by built-in code when an error occurs." />
<meta name="ahk:equiv-v1" content="AutoHotkey.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Error Object</h1>

<p>Error objects are <a href="../commands/Throw.htm">thrown</a> by built-in code when a runtime error occurs, and may also be thrown explicitly by the script.</p>

<p id="Message"><strong>Message:</strong> An error message.</p>
<p id="What"><strong>What:</strong> What threw the exception. This is usually the name of a function, but is blank for exceptions thrown due to an error in an expression (such as using a math operator on a non-numeric value).</p>
<p id="Extra"><strong>Extra:</strong> A string value relating to the error, if available. If this value can be converted to a non-empty string, the standard error dialog displays a line with "Specifically:" followed by this string.</p>
<p id="File"><strong>File:</strong> The full path of the script file which contains the line at which the error occurred, or at which the Error object was constructed.</p>
<p id="Line"><strong>Line:</strong> The line number at which the error occurred, or at which the Error object was constructed.</p>

<h2>Error Types</h2>

<p>The following subclasses of <strong>Error</strong> are predefined:</p>
<ul>
  <li id="IndexError"><strong>IndexError</strong>: An attempt was made to assign or retrieve an item at an invalid index using the object's <a href="../Objects.htm#__Item">__Item property</a>, which is usually accessed via the <a href="../Variables.htm#square-brackets">item access operator</a> (also known as the indexing operator).<ul>
    <li id="KeyError"><strong>KeyError</strong>: Subclass of IndexError used by Map.</li>
  </ul></li>
  <li id="MemberError"><strong>MemberError</strong>: An attempt was made to access an undefined property or method. <strong>Message</strong> indicates the type of value being invoked and the name of the property or method. This error type is not used directly; instead, one of the following subclasses is used.<ul>
    <li id="PropertyError"><strong>PropertyError</strong></li>
    <li id="MethodError"><strong>MethodError</strong></li>
  </ul></li>
  <li id="MemoryError"><strong>MemoryError</strong>: A memory allocation failed.</li>
  <li id="OSError"><strong>OSError</strong>: An internal function call to a Win32 function failed. <strong>Message</strong> includes an error code and description generated by the operating system.</li>
  <li id="TargetError"><strong>TargetError</strong>: A function failed because its target could not be found. <strong>Message</strong> indicates what kind of target, such as a window, control, menu or status bar.</li>
  <li id="TimeoutError"><strong>TimeoutError</strong>: <a href="../commands/SendMessage.htm">SendMessage</a> timed out.</li>
  <li id="TypeError"><strong>TypeError</strong>: An unexpected type of value was used as input for a function, property assignment, or some other operation. Usually <strong>Message</strong> indicates the expected and actual type, and <strong>Extra</strong> contains a string representing the errant value.</li>
  <li id="ValueError"><strong>ValueError</strong>: An unexpected value was used as input for a function, property assignment, or some other operation. Usually <strong>Message</strong> indicates which expectation was broken, and <strong>Extra</strong> contains a string representing the errant value.</li>
  <li id="ZeroDivisionError"><strong>ZeroDivisionError</strong>: Division by zero was attempted in an expression or with the Mod function.</li>
</ul>
<p>Errors are also thrown using the base Error class.</p>

</body>
</html>